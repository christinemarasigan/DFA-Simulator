{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["// http://thenewcode.com/1068/Making-Arrows-in-SVG\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PolyLineStyle = {\n  fill: 'none'\n  // Not yet sure if this is a good property to set or not\n  //vectorEffect: 'non-scaling-stroke'\n};\n\nconst PathStyle = {\n  fill: 'none'\n};\n\nfunction toRad(d) {\n  return (d * Math.PI) / 180;\n}\n\nexport default class Arrow extends PureComponent {\n  static propTypes = {\n    length: PropTypes.number,\n    angle: PropTypes.number,\n    color: PropTypes.string,\n    arrowHeadFilled: PropTypes.bool,\n    lineWidth: PropTypes.number,\n    lineDashed: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n  };\n\n  static defaultProps = {\n    angle: 0,\n    length: 50,\n    color: '#231F20',\n    arrowHeadFilled: true,\n    lineWidth: 1,\n    lineDashed: false\n  };\n\n  constructor() {\n    super();\n    if (!this.constructor.__counter) {\n      this.constructor.__counter = 1;\n    }\n    this.uniqid = this.constructor.__counter++;\n  }\n\n  render() {\n    let {\n      length,\n      angle,\n      arrowHeadFilled,\n      lineWidth,\n      lineDashed,\n      ...otherProps\n    } = this.props;\n\n    // By default, our sin math would let the angle rotate to\n    // the left. Reverse the direction.\n    angle = -angle + 180;\n    angle = angle % 360;\n\n    // Let's do some trig to calculate the viewbox.\n    //\n    // Assuming the arrow points top right, c is the arrow\n    // length, a is the viewbox width, b is the viewbox height.\n\n    // We know C is 90deg\n    const B = angle;\n    const C = 90;\n    const A = 180 - C - B;\n    const c = length;\n\n    // Get all the sides\n    let a = (c / Math.sin(toRad(C))) * Math.sin(toRad(A));\n    let b = (c / Math.sin(toRad(C))) * Math.sin(toRad(B));\n\n    // a, b can be negative if the angle. We will rewrite\n    // those values to go inside the svg viewbox.\n    const width = Math.abs(b);\n    const height = Math.abs(a);\n\n    let padding = 10;\n\n    // Now we have a viewBox\n    const viewBox = `0 0 ${width + padding * 2} ${height + padding * 2}`;\n\n    function point(x, y) {\n      if (b < 0) {\n        x = width + padding * 2 - x;\n      }\n      if (a < 0) {\n        y = height + padding * 2 - y;\n      }\n      return `${x},${y}`;\n    }\n\n    const path = [\n      `M${point(padding, padding)}`,\n      `L${point(width + padding, height + padding)}`\n    ];\n\n    // TODO: Cooler line:\n    // M16.7,178 c87.6-46.9,162.9-185.4,227-136.4C307.2,90.1,195,158.5,111,108.9C71,85.2,92.2,30.7,126,7\n\n    const markerId = `Arrow-pointer-${this.uniqid}`;\n\n    // Based on the props, determine the styles.\n    const arrowHeadStyle = {\n      ...PolyLineStyle,\n      strokeWidth: 0,\n      stroke: this.props.color\n    };\n    if (this.props.arrowHeadFilled) {\n      arrowHeadStyle.fill = this.props.color;\n    } else {\n      arrowHeadStyle.strokeWidth = 1;\n    }\n\n    const lineStyle = {\n      ...PathStyle,\n      stroke: this.props.color,\n      strokeWidth: this.props.lineWidth\n    };\n\n    if (lineDashed) {\n      if (typeof lineDashed !== 'string') {\n        lineDashed = '11, 5';\n      }\n\n      lineStyle.strokeDasharray = lineDashed;\n    }\n\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={viewBox} {...otherProps}>\n        <defs>\n          <marker\n            id={markerId}\n            markerWidth=\"9\"\n            markerHeight=\"9\"\n            refX=\"8\"\n            refY=\"5\"\n            orient=\"auto\"\n            markerUnits=\"strokeWidth\"\n          >\n            <polyline points=\"1 1, 9 5, 1 9\" style={arrowHeadStyle} />\n          </marker>\n        </defs>\n        <path\n          style={lineStyle}\n          d={path.join(' ')}\n          markerEnd={`url(#${markerId})`}\n        />\n      </svg>\n    );\n  }\n}\n"],"names":["PolyLineStyle","PathStyle","toRad","d","Math","PI","Arrow","constructor","__counter","uniqid","props","length","angle","arrowHeadFilled","lineWidth","lineDashed","otherProps","B","C","A","c","a","sin","b","width","abs","height","padding","viewBox","point","x","y","path","markerId","arrowHeadStyle","color","fill","strokeWidth","lineStyle","strokeDasharray","React","join","PureComponent","propTypes","PropTypes","number","string","bool","oneOfType","defaultProps"],"mappings":"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"}